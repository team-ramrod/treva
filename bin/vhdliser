#!/usr/bin/env ruby

puts <<-END
--
--	leros_rom.vhd
--
--	generic VHDL version of ROM
--
--		DONT edit this file!
--		generated by leros.asm.LerosAsm
--

library ieee;
use ieee.std_logic_1164.all;

entity leros_rom is
port (
    address : in std_logic_vector(8 downto 0);
    q : out std_logic_vector(15 downto 0)
);
end leros_rom;

architecture rtl of leros_rom is

begin

process(address) begin

case address is
END

module PaddedBinaryOutput
  def padded_binary(width)
    to_s(2).rjust(width,'0')
  end
end

Fixnum.send(:include, PaddedBinaryOutput)

addr = 0
$stdin.bytes.each_slice(2) do |op,arg|
  puts <<-END
    when "#{addr.padded_binary(9)}" => q <= "#{op.padded_binary(8) + arg.padded_binary(8)}";
  END
  addr = addr.succ
end
  

puts <<-END
    when others => q <= "0000000000000000";
end case;
end process;

end rtl;
END
